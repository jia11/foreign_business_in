package cn.com.jnpc.foreign.mapperprovider;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import java.util.List;
import java.util.Map;

import cn.com.jnpc.foreign.model.FiBlobExample;
import cn.com.jnpc.foreign.model.FiBlobExample.Criteria;
import cn.com.jnpc.foreign.model.FiBlobExample.Criterion;
import cn.com.jnpc.foreign.po.FiBlob;
import cn.com.jnpc.foreign.vo.PageMybatis;

public class FiBlobSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_BLOB
     *
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    public String countByExample(FiBlobExample example) {
        BEGIN();
        SELECT("count(*)");
        FROM("FI_BLOB");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_BLOB
     *
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    public String deleteByExample(FiBlobExample example) {
        BEGIN();
        DELETE_FROM("FI_BLOB");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_BLOB
     *
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    public String insertSelective(FiBlob record) {
        BEGIN();
        INSERT_INTO("FI_BLOB");
        
        if (record.getId() != null) {
            VALUES("ID", "#{id,jdbcType=DECIMAL}");
        }
        
        if (record.getParentId() != null) {
            VALUES("PARENT_ID", "#{parentId,jdbcType=VARCHAR}");
        }
        
        if (record.getFileV() != null) {
            VALUES("FILE_V", "#{fileV,jdbcType=BLOB}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_BLOB
     *
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    public String selectByExampleWithBLOBs(FiBlobExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("ID");
        } else {
            SELECT("ID");
        }
        SELECT("PARENT_ID");
        SELECT("FILE_V");
        FROM("FI_BLOB");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_BLOB
     *
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    public String selectByExample(FiBlobExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("ID");
        } else {
            SELECT("ID");
        }
        SELECT("PARENT_ID");
        FROM("FI_BLOB");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        return SQL();
    }

    
    public String selectByPage(PageMybatis page){
	BEGIN();
	//select t2.* from (select rownum r,t1.* from fi_foreign t1 where rownum < 2) t2 where t2.r > 0;
	SELECT("t2.ID");
	SELECT("t2.PARENT_ID");
	SELECT("t2.FILE_V");
        FROM("( select rownum r,t1.* from FI_BLOB t1 where rownum <"+page.getNextsize()+" ) t2");
        WHERE("t2.r > "+ page.getNowsize());
	return SQL();
    }
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_BLOB
     *
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        FiBlob record = (FiBlob) parameter.get("record");
        FiBlobExample example = (FiBlobExample) parameter.get("example");
        
        BEGIN();
        UPDATE("FI_BLOB");
        
        if (record.getId() != null) {
            SET("ID = #{record.id,jdbcType=DECIMAL}");
        }
        
        if (record.getParentId() != null) {
            SET("PARENT_ID = #{record.parentId,jdbcType=VARCHAR}");
        }
        
        if (record.getFileV() != null) {
            SET("FILE_V = #{record.fileV,jdbcType=BLOB}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_BLOB
     *
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    public String updateByExampleWithBLOBs(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("FI_BLOB");
        
        SET("ID = #{record.id,jdbcType=DECIMAL}");
        SET("PARENT_ID = #{record.parentId,jdbcType=VARCHAR}");
        SET("FILE_V = #{record.fileV,jdbcType=BLOB}");
        
        FiBlobExample example = (FiBlobExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_BLOB
     *
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("FI_BLOB");
        
        SET("ID = #{record.id,jdbcType=DECIMAL}");
        SET("PARENT_ID = #{record.parentId,jdbcType=VARCHAR}");
        
        FiBlobExample example = (FiBlobExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_BLOB
     *
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    public String updateByPrimaryKeySelective(FiBlob record) {
        BEGIN();
        UPDATE("FI_BLOB");
        
        if (record.getParentId() != null) {
            SET("PARENT_ID = #{parentId,jdbcType=VARCHAR}");
        }
        
        if (record.getFileV() != null) {
            SET("FILE_V = #{fileV,jdbcType=BLOB}");
        }
        
        WHERE("ID = #{id,jdbcType=DECIMAL}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_BLOB
     *
     * @mbggenerated Sun Sep 22 22:28:01 CST 2013
     */
    protected void applyWhere(FiBlobExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}