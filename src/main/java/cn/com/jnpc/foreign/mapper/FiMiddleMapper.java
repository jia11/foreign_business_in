package cn.com.jnpc.foreign.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import cn.com.jnpc.foreign.mapperprovider.FiMiddleSqlProvider;
import cn.com.jnpc.foreign.model.FiMiddleExample;
import cn.com.jnpc.foreign.po.FiMiddle;

public interface FiMiddleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_MIDDLE
     *
     * @mbggenerated Tue Sep 24 10:41:03 CST 2013
     */
    @SelectProvider(type=FiMiddleSqlProvider.class, method="countByExample")
    int countByExample(FiMiddleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_MIDDLE
     *
     * @mbggenerated Tue Sep 24 10:41:03 CST 2013
     */
    @DeleteProvider(type=FiMiddleSqlProvider.class, method="deleteByExample")
    int deleteByExample(FiMiddleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_MIDDLE
     *
     * @mbggenerated Tue Sep 24 10:41:03 CST 2013
     */
    @Delete({
        "delete from FI_MIDDLE",
        "where ID = #{id,jdbcType=NUMERIC}"
    })
    int deleteByPrimaryKey(int id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_MIDDLE
     *
     * @mbggenerated Tue Sep 24 10:41:03 CST 2013
     */
    @Insert({
        "insert into FI_MIDDLE (ID, FK_INVITATION_ID, ",
        "FK_PERSON_ID, FK_PERSON_PPID, ",
        "CREATE_DATE, CREATE_USER, ",
        "EDIT_USER, EDIT_DATE, ",
        "WORK, WORK_ADDRESS, ",
        "LIVING_ADDRESS, DEFER_ID)",
        "values (#{id,jdbcType=NUMERIC}, #{fkInvitationId,jdbcType=VARCHAR}, ",
        "#{fkPersonId,jdbcType=VARCHAR}, #{fkPersonPpid,jdbcType=VARCHAR}, ",
        "#{createDate,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, ",
        "#{editUser,jdbcType=VARCHAR}, #{editDate,jdbcType=TIMESTAMP}, ",
        "#{work,jdbcType=VARCHAR}, #{workAddress,jdbcType=VARCHAR}, ",
        "#{livingAddress,jdbcType=VARCHAR}, #{deferId,jdbcType=VARCHAR})"
    })
    @SelectKey(before=true,keyProperty="id",resultType=Integer.class,statement="select fimiddle_sequence.nextval as id from dual")
    int insert(FiMiddle record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_MIDDLE
     *
     * @mbggenerated Tue Sep 24 10:41:03 CST 2013
     */
    @InsertProvider(type=FiMiddleSqlProvider.class, method="insertSelective")
    int insertSelective(FiMiddle record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_MIDDLE
     *
     * @mbggenerated Tue Sep 24 10:41:03 CST 2013
     */
    @SelectProvider(type=FiMiddleSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.NUMERIC, id=true),
        @Result(column="FK_INVITATION_ID", property="fkInvitationId", jdbcType=JdbcType.VARCHAR),
        @Result(column="FK_PERSON_ID", property="fkPersonId", jdbcType=JdbcType.VARCHAR),
        @Result(column="FK_PERSON_PPID", property="fkPersonPpid", jdbcType=JdbcType.VARCHAR),
        @Result(column="CREATE_DATE", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATE_USER", property="createUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="EDIT_USER", property="editUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="EDIT_DATE", property="editDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="WORK", property="work", jdbcType=JdbcType.VARCHAR),
        @Result(column="WORK_ADDRESS", property="workAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="LIVING_ADDRESS", property="livingAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="DEFER_ID", property="deferId", jdbcType=JdbcType.VARCHAR)
    })
    List<FiMiddle> selectByExample(FiMiddleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_MIDDLE
     *
     * @mbggenerated Tue Sep 24 10:41:03 CST 2013
     */
    @Select({
        "select",
        "ID, FK_INVITATION_ID, FK_PERSON_ID, FK_PERSON_PPID, CREATE_DATE, CREATE_USER, ",
        "EDIT_USER, EDIT_DATE, WORK, WORK_ADDRESS, LIVING_ADDRESS, DEFER_ID",
        "from FI_MIDDLE",
        "where ID = #{id,jdbcType=NUMERIC}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.NUMERIC, id=true),
        @Result(column="FK_INVITATION_ID", property="fkInvitationId", jdbcType=JdbcType.VARCHAR),
        @Result(column="FK_PERSON_ID", property="fkPersonId", jdbcType=JdbcType.VARCHAR),
        @Result(column="FK_PERSON_PPID", property="fkPersonPpid", jdbcType=JdbcType.VARCHAR),
        @Result(column="CREATE_DATE", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATE_USER", property="createUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="EDIT_USER", property="editUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="EDIT_DATE", property="editDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="WORK", property="work", jdbcType=JdbcType.VARCHAR),
        @Result(column="WORK_ADDRESS", property="workAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="LIVING_ADDRESS", property="livingAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="DEFER_ID", property="deferId", jdbcType=JdbcType.VARCHAR)
    })
    FiMiddle selectByPrimaryKey(int id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_MIDDLE
     *
     * @mbggenerated Tue Sep 24 10:41:03 CST 2013
     */
    @UpdateProvider(type=FiMiddleSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FiMiddle record, @Param("example") FiMiddleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_MIDDLE
     *
     * @mbggenerated Tue Sep 24 10:41:03 CST 2013
     */
    @UpdateProvider(type=FiMiddleSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") FiMiddle record, @Param("example") FiMiddleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_MIDDLE
     *
     * @mbggenerated Tue Sep 24 10:41:03 CST 2013
     */
    @UpdateProvider(type=FiMiddleSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FiMiddle record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FI_MIDDLE
     *
     * @mbggenerated Tue Sep 24 10:41:03 CST 2013
     */
    @Update({
        "update FI_MIDDLE",
        "set FK_INVITATION_ID = #{fkInvitationId,jdbcType=VARCHAR},",
          "FK_PERSON_ID = #{fkPersonId,jdbcType=VARCHAR},",
          "FK_PERSON_PPID = #{fkPersonPpid,jdbcType=VARCHAR},",
          "CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},",
          "CREATE_USER = #{createUser,jdbcType=VARCHAR},",
          "EDIT_USER = #{editUser,jdbcType=VARCHAR},",
          "EDIT_DATE = #{editDate,jdbcType=TIMESTAMP},",
          "WORK = #{work,jdbcType=VARCHAR},",
          "WORK_ADDRESS = #{workAddress,jdbcType=VARCHAR},",
          "LIVING_ADDRESS = #{livingAddress,jdbcType=VARCHAR},",
          "DEFER_ID = #{deferId,jdbcType=VARCHAR}",
        "where ID = #{id,jdbcType=NUMERIC}"
    })
    int updateByPrimaryKey(FiMiddle record);
}